// Generated by CoffeeScript 1.7.1
(function() {
  var OutputPlugin, aws;

  aws = require('aws-sdk');

  OutputPlugin = (function() {
    function OutputPlugin(option) {
      var table, _i, _len, _ref;
      if (option == null) {
        option = {};
      }
      if (option.awsCredential) {
        this.config.awsCredential(option.awsCredential);
      }
      if (option.dynamo) {
        this.dynamo = new aws.DynamoDB;
        if (typeof option.dynamo === 'Object') {
          _ref = option.dynamo;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            table = _ref[_i];
            this.dynamoConfig(table);
          }
        } else {
          this.dynamoConfig(option.dynamo);
        }
      }
      if (option.logType) {
        this.logType = option.logType;
      }
    }

    OutputPlugin.prototype.convert = function(log) {
      if (this.logType) {
        return this.selectType(this.logType, log);
      } else {
        return JSON.parse(log);
      }
    };

    OutputPlugin.prototype.selectType = function(type, log) {
      switch (type) {
        case 'tsv':
          return this.tsvParse(log);
        case 'csv':
          return this.csvParse(log);
        default:
          return console.log('not supported type');
      }
    };

    OutputPlugin.prototype.emit = function(log) {
      return console.log(this.convert(log.data));
    };

    OutputPlugin.prototype.tsvParse = function(log) {
      var array, item, key, kv, result, val, _i, _len;
      array = log.split('\t');
      result = [];
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        item = array[_i];
        kv = item.split(':');
        key = kv[0];
        val = kv.slice(1).join(':');
        result[key] = val;
      }
      return result;
    };

    OutputPlugin.prototype.csvParse = function(log) {
      var array, item, key, kv, result, val, _i, _len;
      array = log.split(',');
      result = [];
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        item = array[_i];
        kv = item.split(':');
        key = kv[0];
        val = kv.slice(1).join(':');
        result[key] = val;
      }
      return result;
    };

    OutputPlugin.prototype.config = {
      awsCredential: function(path) {
        return aws.config.loadFromPath(path);
      }
    };

    OutputPlugin.prototype.dynamoConfig = function(table) {
      var params;
      this[table] = {};
      params = {
        TableName: table
      };
      this[table].putItem = (function(_this) {
        return function(item) {
          params.Item = item;
          return _this.dynamo.putItem(params, function(err, data, callback) {
            if (err) {
              return callback(err);
            } else {
              return callback(null, data);
            }
          });
        };
      })(this);
      return this[table].getItem = (function(_this) {
        return function(option, callback) {
          params.Key = option.Key;
          if (option.AttributesToGet) {
            params.AttributesToGet = option.AttributesToGet;
          }
          return _this.dynamo.getItem(params, function(err, data) {
            if (err) {
              return callback(err);
            } else {
              return callback(null, data);
            }
          });
        };
      })(this);
    };

    return OutputPlugin;

  })();

  module.exports = OutputPlugin;

}).call(this);
